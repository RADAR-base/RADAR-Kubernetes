bases:
- ../environments.yaml

---

{{ readFile "../etc/helmfile-templates.yaml" }}

releases:
  - name: redis
    chart: radar/redis
    version: {{ .Values.redis._chart_version }}
    installed: {{ .Values.redis._install }}
    timeout: {{ add .Values.base_timeout .Values.redis._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/redis/values.yaml"
      - {{ .Values.redis | toYaml | indent 8 | trim }}

  - name: minio
    chart: radar/minio
    version: {{ .Values.minio._chart_version }}
    installed: {{ .Values.minio._install }}
    timeout: {{ add .Values.base_timeout .Values.minio._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/minio/values.yaml"
      - {{ .Values.minio | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hostname
        value: "s3.{{ .Values.server_name }}"
      - name: apiIngress.hostname
        value: "api.s3.{{ .Values.server_name }}"
      - name: auth.rootUser
        value: {{ dig "auth" "rootUser" (dig "accessKey" .Values.s3_access_key .Values.minio) .Values.minio }}
      - name: auth.rootPassword
        value: {{ dig "auth" "rootPassword" (dig "secretKey" .Values.s3_secret_key .Values.minio) .Values.minio }}
      - name: metrics.serviceMonitor.enabled
        value: {{ .Values.kube_prometheus_stack._install }}
      - name: metrics.prometheusRule.enabled
        value: {{ .Values.kube_prometheus_stack._install }}

  - name: radar-s3-connector
    chart: radar/radar-s3-connector
    version: {{ .Values.radar_s3_connector._chart_version }}
    installed: {{ .Values.radar_s3_connector._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_s3_connector._extra_timeout }}
    {{ if or .Values.minio._install .Values.cp_kafka._install }}
    needs:
      {{ if .Values.minio._install }}- minio{{ end }}
      {{ if .Values.cp_kafka._install }}
      - cp-kafka
      - cp-schema-registry
      {{ end }}
    {{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_s3_connector | toYaml | indent 8 | trim }}
      - {{ .Values.confluent_cloud | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: cc.enabled
        value: {{ .Values.confluent_cloud.enabled }}
      - name: bucketAccessKey
        value: {{ dig "bucketAccessKey" .Values.s3_access_key .Values.radar_s3_connector }}
      - name: bucketSecretKey
        value: {{ dig "bucketSecretKey" .Values.s3_secret_key .Values.radar_s3_connector }}

  - name: s3-proxy
    chart: radar/s3-proxy
    version: {{ .Values.s3_proxy._chart_version }}
    installed: {{ .Values.s3_proxy._install }}
    timeout: {{ add .Values.base_timeout .Values.s3_proxy._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.s3_proxy | toYaml | indent 8 | trim }}
    set:
      - name: s3.identity
        value: {{ dig "s3" "identity" .Values.s3_access_key .Values.s3_proxy }}
      - name: s3.credential
        value: {{ dig "s3" "credential" .Values.s3_secret_key .Values.s3_proxy }}

  - name: radar-output
    chart: radar/radar-output
    version: {{ .Values.radar_output._chart_version }}
    installed: {{ .Values.radar_output._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_output._extra_timeout }}
    <<: *logFailedRelease
    needs:
      - radar-s3-connector
      {{ if .Values.redis._install }}- redis{{ end }}
      {{ if .Values.minio._install }}- minio{{ end }}
    values:
      - {{ .Values.radar_output | toYaml | indent 8 | trim }}
    set:
      - name: source.s3.accessToken
        value: {{ dig "source" "s3" "accessToken" .Values.s3_access_key .Values.radar_output }}
      - name: source.s3.secretKey
        value: {{ dig "source" "s3" "secretKey" .Values.s3_secret_key .Values.radar_output }}
      - name: target.s3.accessToken
        value: {{ dig "target" "s3" "accessToken" .Values.s3_access_key .Values.radar_output }}
      - name: target.s3.secretKey
        value: {{ dig "target" "s3" "secretKey" .Values.s3_secret_key .Values.radar_output }}
