bases:
- ../environments.yaml

---

{{ readFile "../etc/helmfile-templates.yaml" }}

releases:
  - name: mongodb
    namespace: graylog
    chart: radar/mongodb
    version: {{ .Values.mongodb._chart_version }}
    installed: {{ .Values.mongodb._install }}
    timeout: {{ add .Values.base_timeout .Values.mongodb._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/mongodb/values.yaml"
      - {{ .Values.mongodb | toYaml | indent 8 | trim }}

  - name: elasticsearch
    namespace: graylog
    chart: radar/elasticsearch
    version: {{ .Values.elasticsearch._chart_version }}
    installed: {{ .Values.elasticsearch._install }}
    timeout: {{ add .Values.base_timeout .Values.elasticsearch._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/elasticsearch/values.yaml"
      - {{ .Values.elasticsearch | toYaml | indent 8 | trim }}

  - name: graylog
    namespace: graylog
    chart: radar/graylog
    version: {{ .Values.graylog._chart_version }}
    installed: {{ .Values.graylog._install }}
    timeout: {{ add .Values.base_timeout .Values.graylog._extra_timeout }}
    needs:
      {{ if .Values.mongodb._install }}- graylog/mongodb{{ end }}
      {{ if .Values.elasticsearch._install }}- graylog/elasticsearch{{ end }}    
    <<: *logFailedRelease
    values:
      - "../etc/graylog/values.yaml"
      - {{ .Values.graylog | toYaml | indent 8 | trim }}
    set:
      - name: graylog.mongodb.uri
        value: mongodb://graylog:{{ index (dig "auth" "passwords" (list "") .Values.mongodb) 0 }}@mongodb-headless.graylog.svc.cluster.local:27017/graylog?replicaSet=rs0
      - name: graylog.rootEmail
        value: {{ .Values.maintainer_email }}
      - name: graylog.ingress.hosts
        values: [graylog.{{ .Values.server_name }}]
      - name: graylog.ingress.tls[0].secretName
        value: radar-base-tls
      - name: graylog.ingress.tls[0].hosts
        values: ["graylog.{{ .Values.server_name }}"]

  - name: fluent-bit
    namespace: graylog
    chart: radar/fluent-bit
    version: {{ .Values.fluent_bit._chart_version }}
    installed: {{ .Values.fluent_bit._install }}
    timeout: {{ add .Values.base_timeout .Values.fluent_bit._extra_timeout }}
    {{ if .Values.graylog._install }}needs: [graylog/graylog]{{ end }}
    <<: *logFailedRelease
    values:
      - "../etc/fluent-bit/values.yaml"
      - {{ .Values.fluent_bit | toYaml | indent 8 | trim }}
    set:
      - name: server_name
        value: {{ .Values.server_name }}

  - name: kube-prometheus-stack
    namespace: monitoring
    chart: radar/kube-prometheus-stack
    version: {{ .Values.kube_prometheus_stack._chart_version }}
    installed: {{ .Values.kube_prometheus_stack._install }}
    timeout: {{ add .Values.base_timeout .Values.kube_prometheus_stack._extra_timeout }}
    disableValidation: true
    <<: *logFailedReleasePrometheus
    values:
      - {{ .Values.kube_prometheus_stack | toYaml | indent 8 | trim }}
    set:
      - name: server_name
        value: {{ .Values.server_name }}
      - name: kube-prometheus-stack.prometheus.ingress.hosts
        values: ["prometheus.{{ .Values.server_name }}"]
      - name: kube-prometheus-stack.prometheus.ingress.tls[0].secretName
        value: radar-base-tls-prometheus
      - name: kube-prometheus-stack.prometheus.ingress.tls[0].hosts
        values: ["prometheus.{{ .Values.server_name }}"]

      - name: kube-prometheus-stack.alertmanager.ingress.hosts
        values: ["alertmanager.{{ .Values.server_name }}"]
      - name: kube-prometheus-stack.alertmanager.ingress.tls[0].secretName
        value: radar-base-tls-alertmanager
      - name: kube-prometheus-stack.alertmanager.ingress.tls[0].hosts
        values: ["alertmanager.{{ .Values.server_name }}"]

      - name: kube-prometheus-stack.grafana.ingress.hosts
        values: ["grafana.{{ .Values.server_name }}"]
      - name: kube-prometheus-stack.grafana.ingress.tls[0].secretName
        value: radar-base-tls-grafana
      - name: kube-prometheus-stack.grafana.ingress.tls[0].hosts
        values: ["grafana.{{ .Values.server_name }}"]

  - name: cert-manager
    namespace: cert-manager
    chart: radar/cert-manager
    version: {{ .Values.cert_manager._chart_version }}
    installed: {{ .Values.cert_manager._install }}
    timeout: {{ add .Values.base_timeout .Values.cert_manager._extra_timeout }}
    disableValidation: true
    {{ if .Values.kube_prometheus_stack._install }}needs: [monitoring/kube-prometheus-stack]{{ end }}
    <<: *logFailedReleaseCertManager
    values:
      - {{ .Values.cert_manager | toYaml | indent 8 | trim }}
    set:
      - name: global.prometheus.servicemonitor.enabled
        value: {{ .Values.kube_prometheus_stack._install }}      

  - name: nginx-ingress
    chart: radar/ingress-nginx
    version: {{ .Values.nginx_ingress._chart_version }}
    installed: {{ .Values.nginx_ingress._install }}
    timeout: {{ add .Values.base_timeout .Values.nginx_ingress._extra_timeout }}
    {{ if .Values.kube_prometheus_stack._install }}needs: [monitoring/kube-prometheus-stack]{{ end }}
    disableValidation: true
    <<: *logFailedRelease
    values:
      - "../etc/nginx-ingress/values.yaml"
      - {{ .Values.nginx_ingress | toYaml | indent 8 | trim }}
    set:
      - name: controller.metrics.serviceMonitor.enabled
        value: {{ .Values.kube_prometheus_stack._install }}
        
  - name: kafka-manager
    chart: radar/kafka-manager
    version: {{ .Values.kafka_manager._chart_version }}
    installed: {{ .Values.kafka_manager._install }}
    timeout: {{ add .Values.base_timeout .Values.kafka_manager._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.kafka_manager | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values:
          - {{ .Values.server_name }}
      - name: ingress.tls.secretName
        value: radar-base-tls
      - name: ingress.tls.hosts
        values:
          - {{ .Values.server_name }}
