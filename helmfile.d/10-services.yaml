bases:
- ../environments.yaml

---

{{ readFile "../etc/helmfile-templates.yaml" }}

releases:
  - name: mongodb
    namespace: graylog
    chart: radar/mongodb
    version: {{ .Values.mongodb._chart_version }}
    installed: {{ .Values.mongodb._install }}
    timeout: {{ add .Values.base_timeout .Values.mongodb._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/mongodb/values.yaml"
      - {{ .Values.mongodb | toYaml | indent 8 | trim }}

  - name: elasticsearch
    namespace: graylog
    chart: radar/elasticsearch
    version: {{ .Values.elasticsearch._chart_version }}
    installed: {{ .Values.elasticsearch._install }}
    timeout: {{ add .Values.base_timeout .Values.elasticsearch._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/elasticsearch/values.yaml"
      - {{ .Values.elasticsearch | toYaml | indent 8 | trim }}

  - name: graylog
    namespace: graylog
    chart: radar/graylog
    version: {{ .Values.graylog._chart_version }}
    installed: {{ .Values.graylog._install }}
    timeout: {{ add .Values.base_timeout .Values.graylog._extra_timeout }}
    {{ if and ( .Values.mongodb._install ) ( .Values.elasticsearch._install ) }}
    needs:
      - mongodb
      - elasticsearch
    {{ end }}
    <<: *logFailedRelease
    values:
      - "../etc/graylog/values.yaml"
      - {{ .Values.graylog | toYaml | indent 8 | trim }}
    set:
      - name: graylog.mongodb.uri
        value: mongodb://graylog:{{ index (dig "auth" "passwords" (list "") .Values.mongodb) 0 }}@mongodb-headless.graylog.svc.cluster.local:27017/graylog?replicaSet=rs0
      - name: graylog.rootEmail
        value: {{ .Values.maintainer_email }}
      - name: graylog.ingress.hosts
        values: [graylog.{{ .Values.server_name }}]
      - name: graylog.ingress.tls[0].secretName
        value: radar-base-tls
      - name: graylog.ingress.tls[0].hosts
        values: ["graylog.{{ .Values.server_name }}"]

  - name: fluent-bit
    namespace: graylog
    chart: radar/fluent-bit
    version: {{ .Values.fluent_bit._chart_version }}
    installed: {{ .Values.fluent_bit._install }}
    timeout: {{ add .Values.base_timeout .Values.fluent_bit._extra_timeout }}
    {{ if .Values.graylog._install }}needs: [graylog]{{ end }}
    <<: *logFailedRelease
    values:
      - "../etc/fluent-bit/values.yaml"
      - {{ .Values.fluent_bit | toYaml | indent 8 | trim }}
    set:
      - name: server_name
        value: {{ .Values.server_name }}

  - name: ingress-nginx
    chart: radar/ingress-nginx
    version: {{ .Values.nginx_ingress._chart_version }}
    installed: {{ .Values.nginx_ingress._install }}
    timeout: {{ add .Values.base_timeout .Values.nginx_ingress._extra_timeout }}
    disableValidation: true
    <<: *logFailedRelease
    values:
      - "../etc/nginx-ingress/values.yaml"
      - {{ .Values.nginx_ingress | toYaml | indent 8 | trim }}
    set:
      - name: controller.metrics.serviceMonitor.enabled
        value: {{ .Values.kube_prometheus_stack._install }}

  - name: cert-manager-letsencrypt
    namespace: cert-manager
    chart: radar/cert-manager-letsencrypt
    version: {{ .Values.cert_manager_letsencrypt._chart_version }}
    installed: {{ .Values.cert_manager_letsencrypt._install }}
    timeout: {{ add .Values.base_timeout .Values.cert_manager_letsencrypt._extra_timeout }}
    <<: *logFailedRelease
    set:
      - name: maintainerEmail
        value: {{ .Values.maintainer_email }}

  - name: cp-zookeeper
    chart: cp-radar/cp-zookeeper
    version: {{ .Values.cp_zookeeper._chart_version }}
    installed: {{ .Values.cp_zookeeper._install }}
    timeout: {{ add .Values.base_timeout .Values.cp_zookeeper._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/cp-zookeeper/values.yaml"
      - {{ .Values.cp_zookeeper | toYaml | indent 8 | trim }}

  - name: cp-kafka
    chart: cp-radar/cp-kafka
    version: {{ .Values.cp_kafka._chart_version }}
    installed: {{ .Values.cp_kafka._install }}
    timeout: {{ add .Values.base_timeout .Values.cp_kafka._extra_timeout }}
    {{ if .Values.cp_zookeeper._install }}needs: [cp-zookeeper]{{ end }}
    <<: *logFailedRelease
    values:
      - "../etc/cp-kafka/values.yaml"
      - {{ .Values.cp_kafka | toYaml | indent 8 | trim }}
    set:
      - name: brokers
        value: {{ .Values.kafka_num_brokers }}

  - name: cp-schema-registry
    chart: cp-radar/cp-schema-registry
    version: {{ .Values.cp_schema_registry._chart_version }}
    installed: {{ .Values.cp_schema_registry._install }}
    timeout: {{ add .Values.base_timeout .Values.cp_schema_registry._extra_timeout }}
    {{ if .Values.cp_kafka._install }}needs: [cp-kafka]{{ end }}
    <<: *logFailedRelease
    values:
      - "../etc/cp-schema-registry/values.yaml"
      - {{ .Values.cp_schema_registry | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts[0].host
        value: "{{ .Values.server_name }}"
      - name: ingress.hosts[0].paths
        values: ["/schema/?(.*)"]
      - name: ingress.tls[0].secretName
        value: radar-base-tls
      - name: ingress.tls[0].hosts
        values: ["{{ .Values.server_name }}"]

  - name: catalog-server
    chart: radar/catalog-server
    version: {{ .Values.catalog_server._chart_version }}
    installed: {{ .Values.catalog_server._install }}
    timeout: {{ add .Values.base_timeout .Values.catalog_server._extra_timeout }}
    {{ if .Values.cp_kafka._install }}
    needs:
      - cp-kafka
      - cp-schema-registry
    {{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.catalog_server | toYaml | indent 8 | trim }}
      - {{ .Values.confluent_cloud | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: cc.enabled
        value: {{ .Values.confluent_cloud.enabled }}
      {{- if .Values.confluent_cloud.enabled }}
      - name: schema_registry
        value: {{ .Values.confluent_cloud.cc.schemaRegistryUrl }}
      {{ end }}

  - name: radar-home
    chart: radar/radar-home
    version: {{ .Values.radar_home._chart_version }}
    installed: {{ .Values.radar_home._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_home._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_home | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [ {{ .Values.server_name }} ]
      - name: s3.enabled
        value: {{ dig "s3" "enabled" .Values.minio._install .Values.radar_home }}
      {{ if dig "s3" "enabled" .Values.minio._install .Values.radar_home }}
      - name: s3.url
        value: {{ dig "s3" "url" (printf "https://s3.%s/login" .Values.server_name) .Values.radar_home }}
      {{ end }}
      - name: dashboard.enabled
        value: {{ dig "dashboard" "enabled" .Values.radar_grafana._install .Values.radar_home }}
      {{ if dig "dashboard" "enabled" .Values.radar_grafana._install .Values.radar_home }}
      - name: dashboard.url
        value: {{ dig "dashboard" "url" (printf "https://dashboard.%s/" .Values.server_name) .Values.radar_home }}
      {{ end }}
      - name: uploadPortal.enabled
        value: {{ dig "uploadPortal" "enabled" .Values.radar_upload_connect_frontend._install .Values.radar_home }}
      - name: restAuthorizer.enabled
        value: {{ dig "restAuthorizer" "enabled" .Values.radar_rest_sources_authorizer._install .Values.radar_home }}
      - name: monitoring.enabled
        value: {{ dig "monitoring" "enabled" .Values.kube_prometheus_stack._install .Values.radar_home }}
      {{ if dig "monitoring" "enabled" .Values.kube_prometheus_stack._install .Values.radar_home }}
      - name: monitoring.url
        value: {{ dig "monitoring" "url" (printf "https://grafana.%s/login" .Values.server_name) .Values.radar_home }}
      {{ end }}
      - name: logging.enabled
        value: {{ dig "logging" "enabled" .Values.graylog._install .Values.radar_home }}
      {{ if dig "logging" "enabled" .Values.graylog._install .Values.radar_home }}
      - name: logging.url
        value: {{ dig "logging" "url" (printf "https://graylog.%s/" .Values.server_name) .Values.radar_home }}
      {{ end }}

  - name: postgresql
    chart: radar/radar-postgresql
    version: {{ .Values.postgresql._chart_version }}
    installed: {{ .Values.postgresql._install }}
    timeout: {{ add .Values.base_timeout .Values.postgresql._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.postgresql | toYaml | indent 8 | trim }}

  - name: cloudnativepg-operator
    chart: radar/cloudnative-pg
    version: {{ .Values.cloudnativepg_operator._chart_version }}
    # Note: installed when any service that uses cnpg is installed.
    installed: {{ or .Values.cloudnative_postgresql._install .Values.radar_jdbc_connector_grafana._install .Values.radar_jdbc_connector_data_dashboard_backend._install .Values.radar_jdbc_connector_realtime_dashboard._install }}
    timeout: {{ add .Values.base_timeout .Values.cloudnativepg_operator._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.cloudnativepg_operator | toYaml | indent 8 | trim }}

  - name: radar-cloudnative-postgresql
    chart: radar/radar-cloudnative-postgresql
    version: {{ .Values.cloudnative_postgresql._chart_version }}
    installed: {{ .Values.cloudnative_postgresql._install }}
    timeout: {{ add .Values.base_timeout .Values.kube_prometheus_stack._extra_timeout }}
    needs:
      - cloudnativepg-operator
    <<: *logFailedReleasePrometheus
    values:
      - {{ .Values.cloudnative_postgresql | toYaml | indent 8 | trim }}

  - name: management-portal
    chart: radar/management-portal
    version: {{ .Values.management_portal._chart_version }}
    installed: {{ .Values.management_portal._install }}
    timeout: {{ add .Values.base_timeout .Values.management_portal._extra_timeout }}
    {{ if or .Values.postgresql._install .Values.catalog_server._install .Values.cloudnative_postgresql._install }}
    needs:
      {{ if .Values.postgresql._install }}- postgresql{{ end }}
      {{ if .Values.cloudnative_postgresql._install }}- radar-cloudnative-postgresql{{ end }}
      {{ if .Values.catalog_server._install }}- catalog-server{{ end }}
    {{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.management_portal | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: server_name
        value: {{ .Values.server_name }}
      - name: oauth_clients.radar_redcap_integrator.enable
        value: {{ .Values.radar_integration._install }}
      - name: oauth_clients.radar_upload_connect.enable
        value: {{ .Values.radar_upload_source_connector._install }}
      - name: oauth_clients.radar_upload_frontend.enable
        value: {{ .Values.radar_upload_connect_frontend._install }}
      - name: oauth_clients.radar_upload_backend.enable
        value: {{ .Values.radar_upload_connect_backend._install }}
      - name: oauth_clients.radar_rest_sources_authorizer.enable
        value: {{ .Values.radar_rest_sources_authorizer._install }}
      - name: oauth_clients.radar_rest_sources_auth_backend.enable
        value: {{ .Values.radar_rest_sources_backend._install }}
      - name: oauth_clients.radar_fitbit_connector.enable
        value: {{ .Values.radar_fitbit_connector._install }}
      - name: oauth_clients.radar_appconfig.enable
        value: {{ .Values.app_config._install }}
      - name: oauth_clients.appconfig_frontend.enable
        value: {{ .Values.app_config_frontend._install }}
      - name: oauth_clients.grafana_dashboard.enable
        value: {{ .Values.radar_grafana._install }}
      - name: oauth_clients.radar_push_endpoint.enable
        value: {{ .Values.radar_push_endpoint._install }}
      - name: oauth_clients.radar_data_dashboard_backend.enable
        value: {{ .Values.data_dashboard_backend._install }}
      - name: oauth_clients.grafana_dashboard.redirect_uri
        values:
          - "https://dashboard.{{ .Values.server_name }}/login/generic_oauth"

  - name: app-config
    chart: radar/app-config
    version: {{ .Values.app_config._chart_version }}
    installed: {{ .Values.app_config._install }}
    timeout: {{ add .Values.base_timeout .Values.app_config._extra_timeout }}
    {{ if or .Values.postgresql._install .Values.cloudnative_postgresql._install }}
    needs:
    {{ if .Values.postgresql._install }}- postgresql{{ end }}
    {{ if .Values.cloudnative_postgresql._install }}- radar-cloudnative-postgresql{{ end }}
    {{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.app_config | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: clientSecret
        value: {{ .Values.management_portal.oauth_clients.radar_appconfig.client_secret }}

  - name: app-config-frontend
    chart: radar/app-config-frontend
    version: {{ .Values.app_config_frontend._chart_version }}
    installed: {{ .Values.app_config_frontend._install }}
    timeout: {{ add .Values.base_timeout .Values.app_config_frontend._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.app_config_frontend | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: serverName
        value: {{ .Values.server_name }}

  - name: radar-kratos
    chart: radar/radar-kratos
    version: {{ .Values.radar_kratos._chart_version }}
    installed: {{ .Values.radar_kratos._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_kratos._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_kratos | toYaml | indent 8 | trim }}
    set:
      - name: kratos.server_name
        value: {{ .Values.server_name }}
      - name: kratos.kratos.config.courier.smtp.connection_uri
        #  Note: encoding of "/" in password is necessary for the smtp connection_uri because kratos is not able to handle this.
        value: smtp://{{ .Values.management_portal.smtp.username }}:{{ replace "/" "%2F" .Values.management_portal.smtp.password }}@{{ .Values.management_portal.smtp.host }}:{{ .Values | get "management_portal.smtp.port" 587 }}

  - name: radar-hydra
    chart: radar/radar-hydra
    version: {{ .Values.radar_hydra._chart_version }}
    installed: {{ .Values.radar_hydra._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_hydra._extra_timeout }}
    {{ if or .Values.postgresql._install .Values.cloudnative_postgresql._install }}
    needs:
    {{ if .Values.postgresql._install }}- postgresql{{ end }}
    {{ if .Values.cloudnative_postgresql._install }}- radar-cloudnative-postgresql{{ end }}
    {{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_hydra | toYaml | indent 8 | trim }}
    set:
      - name: hydra.server_name
        value: {{ .Values.server_name }}

  - name: radar-self-enrolment-ui
    chart: radar/radar-self-enrolment-ui
    version: {{ .Values.radar_self_enrolment_ui._chart_version }}
    installed: {{ .Values.radar_self_enrolment_ui._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_self_enrolment_ui._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_self_enrolment_ui | toYaml | indent 8 | trim }}
    set:
      - name: serverName
        value: {{ .Values.server_name }}
      - name: kratosPublicUrl
        value: https://{{ .Values.server_name }}/kratos
      - name: kratosBrowserUrl
        value: https://{{ .Values.server_name }}/kratos

  - name: radar-appserver-postgresql
    chart: radar/radar-postgresql
    version: {{ .Values.radar_appserver_postgresql._chart_version }}
    installed: {{ .Values.radar_appserver_postgresql._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_appserver_postgresql._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_appserver_postgresql | toYaml | indent 8 | trim }}

  - name: radar-appserver
    chart: radar/radar-appserver
    version: {{ .Values.radar_appserver._chart_version }}
    installed: {{ .Values.radar_appserver._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_appserver._extra_timeout }}
    {{ if or .Values.radar_appserver_postgresql._install .Values.cloudnative_postgresql._install }}
    needs:
    {{ if .Values.radar_appserver_postgresql._install }}- radar-appserver-postgresql{{ end }}
    {{ if .Values.cloudnative_postgresql._install }}- radar-cloudnative-postgresql{{ end }}
    {{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_appserver | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: serverName
        value: {{ .Values.server_name }}
    {{ if and .Values.radar_appserver.upload.enabled (eq .Values.radar_appserver.upload.storage.type "s3") }}
      - name: upload.storage.access_key
        value: {{ dig "s3" "identity" .Values.s3_access_key .Values.s3_proxy }}
      - name: upload.storage.secret_key
        value: {{ dig "s3" "credential" .Values.s3_secret_key .Values.s3_proxy }}
    {{ end }}

  - name: data-dashboard-timescaledb
    chart: radar/radar-timescaledb
    version: {{ .Values.data_dashboard_timescaledb._chart_version }}
    installed: {{ .Values.data_dashboard_timescaledb._install }}
    timeout: {{ add .Values.base_timeout .Values.data_dashboard_timescaledb._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.data_dashboard_timescaledb | toYaml | indent 8 | trim }}

  - name: grafana-metrics-timescaledb
    chart: radar/radar-timescaledb
    version: {{ .Values.grafana_metrics_timescaledb._chart_version }}
    installed: {{ .Values.grafana_metrics_timescaledb._install }}
    timeout: {{ add .Values.base_timeout .Values.grafana_metrics_timescaledb._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.grafana_metrics_timescaledb | toYaml | indent 8 | trim }}

  - name: realtime-dashboard-timescaledb
    chart: radar/radar-timescaledb
    version: {{ .Values.realtime_dashboard_timescaledb._chart_version }}
    installed: {{ .Values.realtime_dashboard_timescaledb._install }}
    timeout: {{ add .Values.base_timeout .Values.realtime_dashboard_timescaledb._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.realtime_dashboard_timescaledb | toYaml | indent 8 | trim }}

  - name: radar-grafana
    chart: radar/radar-grafana
    version: {{ .Values.radar_grafana._chart_version }}
    installed: {{ .Values.radar_grafana._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_grafana._extra_timeout }}
    needs:
      - radar-jdbc-connector-grafana
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_grafana | toYaml | indent 8 | trim }}
    set:
      - name: grafana.server_name
        value: {{ .Values.server_name }}
      - name: grafana.adminPassword
        value: {{ .Values.grafana_password }}
      - name: "grafana.grafana\\.ini.metrics.basic_auth_username"
        value: {{ .Values.grafana_metrics_endpoint_username }}
      - name: "grafana.grafana\\.ini.metrics.basic_auth_password"
        value: {{ .Values.grafana_metrics_endpoint_password }}

  - name: data-dashboard-backend
    chart: radar/data-dashboard-backend
    version: {{ .Values.data_dashboard_backend._chart_version }}
    installed: {{ .Values.data_dashboard_backend._install }}
    timeout: {{ add .Values.base_timeout .Values.data_dashboard_backend._extra_timeout }}
    needs:
      - radar-jdbc-connector-data-dashboard
    <<: *logFailedRelease
    values:
      - {{ .Values.data_dashboard_backend | toYaml | indent 8 | trim }}
    set:
      - name: serverName
        value: {{ .Values.server_name }}
      - name: ingress.hosts
        values:
          - {{ .Values.server_name }}
      - name: managementPortal.clientSecret
        value: {{ .Values.management_portal.oauth_clients.radar_data_dashboard_backend.client_secret }}

  - name: ksql-server
    chart: cp-radar/cp-ksql-server
    installed: {{ .Values.ksql_server._install }}
    version: {{ .Values.ksql_server._chart_version }}
    timeout: {{ add .Values.base_timeout .Values.ksql_server._extra_timeout }}
    # When catalog server is 'ready', kafka can be used.
    needs:
      - catalog-server
    <<: *logFailedRelease
    values:
      - "../etc/cp-ksql-server/values.yaml"
      - {{ .Values.ksql_server | toYaml | indent 8 | trim }}

  - name: radar-jdbc-connector-grafana
    chart: radar/radar-jdbc-connector
    version: {{ .Values.radar_jdbc_connector_grafana._chart_version }}
    installed: {{ .Values.radar_jdbc_connector_grafana._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_jdbc_connector_grafana._extra_timeout }}
    needs:
      - cp-kafka
      {{ if index .Values "radar_jdbc_connector_grafana" "timescaledb" "enabled" }}- cloudnativepg-operator{{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_jdbc_connector_grafana | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: timescaledb.cluster.fullnameOverride
        value: grafana-timescaledb

  - name: radar-jdbc-connector-data-dashboard
    chart: radar/radar-jdbc-connector
    version: {{ .Values.radar_jdbc_connector_data_dashboard_backend._chart_version }}
    installed: {{ .Values.radar_jdbc_connector_data_dashboard_backend._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_jdbc_connector_data_dashboard_backend._extra_timeout }}
    needs:
      - cp-kafka
      {{ if index .Values "radar_jdbc_connector_data_dashboard_backend" "timescaledb" "enabled" }}- cloudnativepg-operator{{ end }}
    <<: *logFailedRelease
    values:
      - "../etc/radar-jdbc-connector-data-dashboard/values.yaml"
      - {{ .Values.radar_jdbc_connector_data_dashboard_backend | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: timescaledb.cluster.fullnameOverride
        value: data-dashboard-timescaledb

  - name: radar-jdbc-connector-realtime-dashboard
    chart: radar/radar-jdbc-connector
    version: {{ .Values.radar_jdbc_connector_realtime_dashboard._chart_version }}
    installed: {{ .Values.radar_jdbc_connector_realtime_dashboard._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_jdbc_connector_realtime_dashboard._extra_timeout }}
    needs:
      - cp-kafka
      {{ if index .Values "radar_jdbc_connector_realtime_dashboard" "timescaledb" "enabled" }}- cloudnativepg-operator{{ end }}
    <<: *logFailedRelease
    values:
      - "../etc/radar-jdbc-connector-realtime-dashboard/values.yaml"
      - {{ .Values.radar_jdbc_connector_realtime_dashboard | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: timescaledb.cluster.fullnameOverride
        value: realtime-dashboard-timescaledb

  - name: radar-fitbit-connector
    chart: radar/radar-fitbit-connector
    version: {{ .Values.radar_fitbit_connector._chart_version }}
    installed: {{ .Values.radar_fitbit_connector._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_fitbit_connector._extra_timeout }}
    needs:
      - cp-kafka
      - radar-rest-sources-backend
      - management-portal
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_fitbit_connector | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      {{- if hasKey .Values "fitbit_api_client" }}
      - name: fitbit_api_client
        value: {{ .Values.fitbit_api_client }}
      {{- end }}
      {{- if hasKey .Values "fitbit_api_secret" }}
      - name: fitbit_api_secret
        value: {{ .Values.fitbit_api_secret }}
      {{- end }}
      - name: oauthClientSecret
        value: {{ dig "radar_fitbit_connector" "client_secret" "" .Values.management_portal.oauth_clients }}

  - name: radar-rest-sources-authorizer
    chart: radar/radar-rest-sources-authorizer
    version: {{ .Values.radar_rest_sources_authorizer._chart_version }}
    installed: {{ .Values.radar_rest_sources_authorizer._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_rest_sources_authorizer._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_rest_sources_authorizer | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: serverName
        value: {{ .Values.server_name }}

  - name: radar-rest-sources-backend
    chart: radar/radar-rest-sources-backend
    version: {{ .Values.radar_rest_sources_backend._chart_version }}
    installed: {{ .Values.radar_rest_sources_backend._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_rest_sources_backend._extra_timeout }}
    {{ if or .Values.postgresql._install .Values.cloudnative_postgresql._install }}
    needs:
    {{ if .Values.postgresql._install }}- postgresql{{ end }}
    {{ if .Values.cloudnative_postgresql._install }}- radar-cloudnative-postgresql{{ end }}
    {{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_rest_sources_backend | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: serverName
        value: {{ .Values.server_name }}
      {{- if hasKey .Values "fitbit_api_client" }}
      - name: restSourceClients.fitbit.clientId
        value: {{ .Values.fitbit_api_client }}
      {{- end }}
      {{- if hasKey .Values "fitbit_api_secret" }}
      - name: restSourceClients.fitbit.clientSecret
        value: {{ .Values.fitbit_api_secret }}
      {{- end }}
      - name: restSourceClients.fitbit.enable
        value: {{ .Values.radar_fitbit_connector._install }}
      - name: restSourceClients.garmin.enable
        value: {{ and .Values.radar_push_endpoint._install .Values.radar_push_endpoint.garmin.enabled }}
      - name: restSourceClients.garmin.clientId
        value: {{ dig "restSourceClients" "garmin" "clientId" (dig "garmin" "consumerKey" "" .Values.radar_push_endpoint) .Values.radar_rest_sources_backend }}
      - name: restSourceClients.garmin.clientSecret
        value: {{ dig "restSourceClients" "garmin" "clientSecret" (dig "garmin" "consumerSecret" "" .Values.radar_push_endpoint) .Values.radar_rest_sources_backend }}
      - name: client_secret
        value: {{ dig "client_secret" (dig "oauth_clients" "radar_rest_sources_auth_backend" "client_secret" "" .Values.management_portal) .Values.radar_rest_sources_backend }}

  - name: radar-oura-connector
    chart: radar/radar-oura-connector
    version: {{ .Values.radar_oura_connector._chart_version }}
    installed: {{ .Values.radar_oura_connector._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_oura_connector._extra_timeout }}
    needs:
      # When catalog server is 'ready', kafka can be used.
      - catalog-server
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_oura_connector | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      {{- if hasKey .Values "oura_api_client" }}
      - name: oura_api_client
        value: {{ .Values.oura_api_client }}
      {{- end }}
      {{- if hasKey .Values "oura_api_secret" }}
      - name: oura_api_secret
        value: {{ .Values.oura_api_secret }}
      {{- end }}
      - name: oauthClientSecret
        value: {{ dig "radar_oura_connector" "client_secret" "" .Values.management_portal.oauth_clients }}

  - name: radar-gateway
    chart: radar/radar-gateway
    version: {{ .Values.radar_gateway._chart_version }}
    installed: {{ .Values.radar_gateway._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_gateway._extra_timeout }}
    {{ if .Values.cp_schema_registry._install }}needs: [cp-schema-registry]{{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_gateway | toYaml | indent 8 | trim }}
      - {{ .Values.confluent_cloud | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: cc.enabled
        value: {{ .Values.confluent_cloud.enabled }}
      - name: serviceMonitor.enabled
        value: {{ .Values.kube_prometheus_stack._install }}
      {{ if .Values.confluent_cloud.enabled }}
      - name: schemaRegistry
        value: {{ .Values.confluent_cloud.cc.schemaRegistryUrl }}
      - name: bootstrapServers
        value: {{ .Values.confluent_cloud.cc.bootstrapServerurl }}
      {{ end }}

  - name: radar-backend-monitor
    chart: radar/radar-backend
    version: {{ .Values.radar_backend_monitor._chart_version }}
    installed: {{ .Values.radar_backend_monitor._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_backend_monitor._extra_timeout }}
    needs:
      - catalog-server
    <<: *logFailedRelease
    values:
      - "../etc/radar-backend-monitor/values.yaml"
      - {{ .Values.radar_backend_monitor | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}

  - name: radar-backend-stream
    chart: radar/radar-backend
    version: {{ .Values.radar_backend_monitor._chart_version }}
    installed: {{ .Values.radar_backend_stream._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_backend_stream._extra_timeout }}
    needs:
      # When catalog server is 'ready', kafka can be used.
      - catalog-server
    <<: *logFailedRelease
    values:
      - "../etc/radar-backend-stream/values.yaml"
      - {{ .Values.radar_backend_stream | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}

  - name: radar-integration
    chart: radar/radar-integration
    version: {{ .Values.radar_integration._chart_version }}
    installed: {{ .Values.radar_integration._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_integration._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_integration | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: oauth_client_secret
        value: {{ dig "oauth_client_secret" (dig "oauth_clients" "radar_redcap_integrator" "client_secret" "" .Values.management_portal) .Values.radar_integration }}

  - name: redis
    chart: radar/redis
    version: {{ .Values.redis._chart_version }}
    installed: {{ .Values.redis._install }}
    timeout: {{ add .Values.base_timeout .Values.redis._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/redis/values.yaml"
      - {{ .Values.redis | toYaml | indent 8 | trim }}

  - name: minio
    chart: radar/minio
    version: {{ .Values.minio._chart_version }}
    installed: {{ .Values.minio._install }}
    timeout: {{ add .Values.base_timeout .Values.minio._extra_timeout }}
    <<: *logFailedRelease
    values:
      - "../etc/minio/values.yaml"
      - {{ .Values.minio | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hostname
        value: "s3.{{ .Values.server_name }}"
      - name: apiIngress.hostname
        value: "api.s3.{{ .Values.server_name }}"
      - name: auth.rootUser
        value: {{ dig "auth" "rootUser" (dig "accessKey" .Values.s3_access_key .Values.minio) .Values.minio }}
      - name: auth.rootPassword
        value: {{ dig "auth" "rootPassword" (dig "secretKey" .Values.s3_secret_key .Values.minio) .Values.minio }}
      - name: metrics.serviceMonitor.enabled
        value: {{ .Values.kube_prometheus_stack._install }}
      - name: metrics.prometheusRule.enabled
        value: {{ .Values.kube_prometheus_stack._install }}

  - name: radar-s3-connector
    chart: radar/radar-s3-connector
    version: {{ .Values.radar_s3_connector._chart_version }}
    installed: {{ .Values.radar_s3_connector._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_s3_connector._extra_timeout }}
    needs:
      # When catalog server is 'ready', kafka can be used.
      - catalog-server
      {{ if .Values.minio._install }}- minio{{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_s3_connector | toYaml | indent 8 | trim }}
      - {{ .Values.confluent_cloud | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: cc.enabled
        value: {{ .Values.confluent_cloud.enabled }}
      - name: bucketAccessKey
        value: {{ dig "bucketAccessKey" .Values.s3_access_key .Values.radar_s3_connector }}
      - name: bucketSecretKey
        value: {{ dig "bucketSecretKey" .Values.s3_secret_key .Values.radar_s3_connector }}

  - name: s3-proxy
    chart: radar/s3-proxy
    version: {{ .Values.s3_proxy._chart_version }}
    installed: {{ .Values.s3_proxy._install }}
    timeout: {{ add .Values.base_timeout .Values.s3_proxy._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.s3_proxy | toYaml | indent 8 | trim }}
    set:
      - name: s3.identity
        value: {{ dig "s3" "identity" .Values.s3_access_key .Values.s3_proxy }}
      - name: s3.credential
        value: {{ dig "s3" "credential" .Values.s3_secret_key .Values.s3_proxy }}

  - name: radar-output
    chart: radar/radar-output
    version: {{ .Values.radar_output._chart_version }}
    installed: {{ .Values.radar_output._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_output._extra_timeout }}
    <<: *logFailedRelease
    needs:
      - radar-s3-connector
      {{ if .Values.redis._install }}- redis{{ end }}
      {{ if .Values.minio._install }}- minio{{ end }}
    values:
      - {{ .Values.radar_output | toYaml | indent 8 | trim }}
    set:
      - name: source.s3.accessToken
        value: {{ dig "source" "s3" "accessToken" .Values.s3_access_key .Values.radar_output }}
      - name: source.s3.secretKey
        value: {{ dig "source" "s3" "secretKey" .Values.s3_secret_key .Values.radar_output }}
      - name: target.s3.accessToken
        value: {{ dig "target" "s3" "accessToken" .Values.s3_access_key .Values.radar_output }}
      - name: target.s3.secretKey
        value: {{ dig "target" "s3" "secretKey" .Values.s3_secret_key .Values.radar_output }}

  - name: radar-upload-postgresql
    chart: radar/radar-postgresql
    version: {{ .Values.radar_upload_postgresql._chart_version }}
    installed: {{ .Values.radar_upload_postgresql._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_upload_postgresql._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_upload_postgresql | toYaml | indent 8 | trim }}

  - name: radar-upload-connect-backend
    chart: radar/radar-upload-connect-backend
    version: {{ .Values.radar_upload_connect_backend._chart_version }}
    installed: {{ .Values.radar_upload_connect_backend._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_upload_connect_backend._extra_timeout }}
    needs:
      - management-portal
      {{ if .Values.radar_upload_postgresql._install }}- radar-upload-postgresql{{ end }}
      {{ if .Values.cloudnative_postgresql._install }}- radar-cloudnative-postgresql{{ end }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_upload_connect_backend | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: serverName
        value: {{ .Values.server_name }}
      - name: client_secret
        value: {{ dig "client_secret" (dig "oauth_clients" "radar_upload_backend" "client_secret" "" .Values.management_portal) .Values.radar_upload_connect_backend }}

  - name: radar-upload-connect-frontend
    chart: radar/radar-upload-connect-frontend
    version: {{ .Values.radar_upload_connect_frontend._chart_version }}
    installed: {{ .Values.radar_upload_connect_frontend._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_upload_connect_frontend._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_upload_connect_frontend | toYaml | indent 8 | trim }}
    set:
      - name: server_name
        value: {{ .Values.server_name }}
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]

  - name: radar-upload-source-connector
    chart: radar/radar-upload-source-connector
    version: {{ .Values.radar_upload_source_connector._chart_version }}
    installed: {{ .Values.radar_upload_source_connector._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_upload_source_connector._extra_timeout }}
    <<: *logFailedRelease
    needs:
      - management-portal
      - radar-upload-connect-backend
      {{ if .Values.cp_schema_registry._install }}- cp-schema-registry{{ end }}
    values:
      - {{ .Values.radar_upload_source_connector | toYaml | indent 8 | trim }}
    set:
      - name: kafka_num_brokers
        value: {{ .Values.kafka_num_brokers }}
      - name: bucketAccessKey
        value: {{ .Values.s3_access_key }}
      - name: bucketSecretKey
        value: {{ .Values.s3_secret_key }}
      - name: client_secret
        value: {{ dig "client_secret" (dig "oauth_clients" "radar_upload_connect" "client_secret" "" .Values.management_portal) .Values.radar_upload_source_connector }}

  - name: cc-schema-registry-proxy
    chart: radar/cc-schema-registry-proxy
    version: {{ .Values.ccSchemaRegistryProxy._chart_version }}
    installed: {{ .Values.ccSchemaRegistryProxy._install }}
    timeout: {{ add .Values.base_timeout .Values.ccSchemaRegistryProxy._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.ccSchemaRegistryProxy | toYaml | indent 8 | trim }}
      - {{ .Values.confluent_cloud| toYaml | indent 8 | trim }}
    set:
      - name: service.externalName
        value: {{ .Values.ccSchemaRegistryProxy.externalName }}
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]

  - name: radar-push-endpoint
    chart: radar/radar-push-endpoint
    version: {{ .Values.radar_push_endpoint._chart_version }}
    installed: {{ .Values.radar_push_endpoint._install }}
    timeout: {{ add .Values.base_timeout .Values.radar_push_endpoint._extra_timeout }}
    needs:
      - management-portal
    <<: *logFailedRelease
    values:
      - {{ .Values.radar_push_endpoint | toYaml | indent 8 | trim }}
      - {{ .Values.confluent_cloud | toYaml | indent 8 | trim }}
    set:
      - name: ingress.hosts
        values: [{{ .Values.server_name }}]
      - name: cc.enabled
        value: {{ .Values.confluent_cloud.enabled }}
      - name: serviceMonitor.enabled
        value: {{ .Values.kube_prometheus_stack._install }}
      {{ if .Values.confluent_cloud.enabled }}
      - name: schemaRegistry
        value: {{ .Values.confluent_cloud.cc.schemaRegistryUrl }}
      - name: bootstrapServers
        value: {{ .Values.confluent_cloud.cc.bootstrapServerurl }}
      {{ end }}
      {{- if .Values.radar_push_endpoint.garmin.enabled }}
      - name: redis.url
        value: {{ .Values.radar_output.redis.uri }}
      {{ end }}
      - name: garmin.userRepositoryClientSecret
        value: {{ dig "garmin" "userRepositoryClientSecret" (dig "oauth_clients" "radar_push_endpoint" "client_secret" "" .Values.management_portal) .Values.radar_push_endpoint }}

  - name: velero
    namespace: velero
    chart: radar/velero-s3-deployment
    version: {{ .Values.velero._chart_version }}
    installed: {{ .Values.velero._install }}
    timeout: {{ add .Values.base_timeout .Values.velero._extra_timeout }}
    <<: *logFailedRelease
    values:
      - {{ .Values.velero | toYaml | indent 8 | trim }}
    set:
      - name: local.accessKey
        value: {{ dig "local" "accessKey" .Values.s3_access_key .Values.velero }}
      - name: local.secretKey
        value: {{ dig "local" "secretKey" .Values.s3_secret_key .Values.velero }}
