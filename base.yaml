kubeContext: default
server_name: example.com
maintainer_email: MAINTAINER_EMAIL
kafka_num_brokers: 3
postgres_password: password

# --------------------------------------------------------- 00-init.yaml ---------------------------------------------------------

mongodb:
  _install: true

elasticsearch:
  _install: true

graylog:
  _install: true

cert_manager:
  _install: true

fluentd:
  _install: true

kube_prometheus_stack:
  _install: true
  kube-prometheus-stack:
    prometheus:
      prometheusSpec:
        replicas: 1
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 10Gi
    alertmanager:
      config:
        receivers:
          - name: default
            slack_configs:
              - api_url: https://hooks.slack.com/services/XXXXXX/XXXXXX/XXXXXXXXXX
                channel: "#radar-ops"
      alertmanagerSpec:
        replicas: 1
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 1Gi
    grafana:
      adminPassword: "password"
    nginx_auth: "test:$apr1$s5C61r9E$kFpp71zFuP7WYiHlA.2Tb1"  # test:test

nginx_ingress:
  _install: true
  controller:
    replicaCount: 1
  metrics:
    enabled: "true"
    serviceMonitor:
      enabled: "true"

kafka_manager:
  _install: true
  basicAuth:
    enabled: true
    username: kafkamanager-user
    password: password

velero:
  _install: true
  objectStorageBackupReplicaCount: 1
  local:
    accessKey: accessKey
    secretKey: secretKey
  backup:
    address: s3.amazon.com  # protocol should not be specified
    accessKey: accessKey
    secretKey: secretKey
    bucket: radar-base-backups
  velero:
    configuration:
      backupStorageLocation:
        bucket: radar-base-backups
        config:
          s3Url: https://s3.amazon.com # protocol should be specified
    credentials:
      secretContents:
        cloud: |
          [default]
          aws_access_key_id=accessKey
          aws_secret_access_key=secretKey

# --------------------------------------------------------- 10-base.yaml ---------------------------------------------------------
confluent_cloud:
  enabled: false
  cc:
    bootstrapServerurl: confluentBootstrapServers
    apiKey: ccApikey
    apiSecret: ccApiSecret
    schemaRegistryApiKey: srApiKey
    schemaRegistryApiSecret: srApiSecret
    schemaRegistryUrl: confluentSchemaRegistryUrl

cp_zookeeper:
  _install: true
  servers: 3

cp_kafka:
  _install: true
  persistence:
    size: 3Gi

cp_schema_registry:
  _install: true
  replicaCount: 1

catalog_server:
  _install: true
  replicaCount: 1
  schema_registry: http://cp-schema-registry:8081

postgresql:
  _install: true
  persistence:
    size: 8Gi

management_portal:
  _install: true
  replicaCount: 1  # should be 1
  postgres:
    password: password
    ssl:
      enabled: false
      keystorepassword: keystorepassword
  managementportal:
    catalogue_server_enable_auto_import: true
    common_admin_password: password
    common_privacy_policy_url: http://info.thehyve.nl/radar-cns-privacy-policy
    frontend_client_secret: password
    oauth_checking_key_aliases_0: radarbase-managementportal-ec
    oauth_checking_key_aliases_1: selfsigned
  from_email: me@example.com
  oauth_clients:
    pRMT:
      enable: true
      client_secret: "saturday$SHARE$scale"
    aRMT:
      enable: true
      client_secret: ""
    radar_upload_backend:
      client_secret: secret
    radar_upload_connect:
      client_secret: secret
    radar_rest_sources_auth_backend:
      client_secret: secret
    radar_redcap_integrator:
      client_secret: secret
    radar_fitbit_connector:
      client_secret: secret
    radar_appconfig:
      client_secret: secret
  smtp:
    enabled: false
    host: smtp
    port: 25
    username: username
    password: secret
    from: noreply@example.com

app_config:
  _install: true
  replicaCount: 1
  jdbc:
    password: password

app_config_frontend:
  _install: true
  replicaCount: 1

smtp:
  _install: true
  replicaCount: 1
  smarthost:
    address: mail.example.com
    user: user@example.com
    password: password
  persistence:
    size: 1Gi

# --------------------------------------------------------- 20-fitbit.yaml ---------------------------------------------------------
fitbit_api_client: fitbit_api_client_id
fitbit_api_secret: fitbit_api_client_secret

radar_fitbit_connector:
  _install: true
  replicaCount: 1
  oauthClientId: radar_fitbit_connector

radar_rest_sources_authorizer:
  _install: true
  replicaCount: 1

radar_rest_sources_backend:
  _install: true
  replicaCount: 1
  postgres:
    host: postgresql-postgresql
    user: postgres
    password: password
    ssl:
      enabled: false
      keystorepassword: keystorepassword

# --------------------------------------------------------- 20-ingestion.yaml ---------------------------------------------------------

cp_kafka_rest:
  _install: true
  replicaCount: 1

radar_gateway:
  _install: true
  replicaCount: 1

# --------------------------------------------------------- 20-kafka-analysis.yaml ---------------------------------------------------------

radar_backend_monitor:
  _install: true
  replicaCount: 1
  persistence:
    size: 1Gi

radar_backend_stream:
  _install: true
  replicaCount: 1

# --------------------------------------------------------- 20-redcap.yaml ---------------------------------------------------------

radar_integration:
  _install: true
  replicaCount: 1
  oauth_client_id: radar_redcap_integrator
  projects:
  - url: "http://example.com"
    project_id: "1"
    enrolment_event: enrolment
    integration_form: radar_integration
    token: xxx
    mp_info_project_name: RADAR-BASE

# --------------------------------------------------------- 20-upload.yaml ---------------------------------------------------------

radar_upload_postgres_password: password

radar_upload_postgresql:
  _install: true
  persistence:
    size: 8Gi

radar_upload_connect_backend:
  _install: true
  replicaCount: 1
  client_id: radar_upload_backend

radar_upload_connect_frontend:
  _install: true
  replicaCount: 1
  vue_app_client_id: radar_upload_frontend

radar_upload_source_connector:
  _install: true
  replicaCount: 1
  client_id: radar_upload_connect


# --------------------------------------------------------- 20-s3-connector.yaml ---------------------------------------------------------

redis:
  _install: true

minio:
  _install: true
  replicas: 4
  accessKey: AKIAIOSFODNN7EXAMPLE
  secretKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  s3Endpoint: http://minio:9000/
  persistence:
    size: 20Gi

radar_s3_connector:
  # set to true if radar-s3-connector should be installed
  _install: true
  replicaCount: 1
  # The bucket name where intermediate data for cold storage should be written to.
  bucketName: radar_intermediate_storage
  bucketAccessKey: AKIAIOSFODNN7EXAMPLE
  bucketSecretKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  s3Endpoint: http://minio:9000/

s3_proxy:
  _install: false
  replicaCount: 1
  s3:
    identity: AKIAIOSFODNN7EXAMPLE
    credential: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  target:
    provider: azureblob

radar_output:
  _install: true
  replicaCount: 1
  source:
    s3:
      endpoint: http://minio:9000/
      accessToken: AKIAIOSFODNN7EXAMPLE
      secretKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      bucket: radar-intermediate-storage
  target:
    s3:
      endpoint: http://minio:9000/
      accessToken: AKIAIOSFODNN7EXAMPLE
      secretKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      bucket: radar-output-storage
  redis:
    url: redis://redis-master:6379

# --------------------------------------------------------- 30-confluent-cloud.yaml ---------------------------------------------------------

ccSchemaRegistryProxy:
  _install: false
  externalName: schema-registry-domain

# --------------------------------------------------------- 20-grafana.yaml ---------------------------------------------------------

grafana_password: password

timescaledb_password: password
timescaledb_username: grafana
timescaledb_db_name: grafana-metrics

radar_grafana:
  _install: true
  replicaCount: 1

timescaledb:
  _install: true
  replicaCount: 1
  persistence:
    size: 8Gi

radar_jdbc_connector:
  _install: true
  replicaCount: 1
