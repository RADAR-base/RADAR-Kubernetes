ingress:
  admin:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: localhost
        paths:
          - path: "/admin/kratos/?(.*)"
            pathType: ImplementationSpecific
    tls:
      - secretName: radar-base-tls
        hosts:
          - localhost
  public:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: localhost
        paths:
          - path: "/kratos/?(.*)"
            pathType: ImplementationSpecific
    tls:
      - secretName: kratos-public-tls
        hosts:
          - localhost

kratos:
  # -- Enables database migration
  automigration:
    enabled: true

  # -- You can add multiple identity schemas here. You can pass JSON schema using `--set-file` Helm CLI argument.
  identitySchemas:
    "identity.schema.admin.json": |
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "admin",
        "title": "admin",
        "type": "object",
        "properties": {
          "traits": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "title": "E-Mail",
                "minLength": 5,
                "ory.sh/kratos": {
                  "credentials": {
                    "password": {
                      "identifier": true
                    },
                    "totp": {
                      "account_name": true
                    }
                  },
                  "verification": {
                    "via": "email"
                  },
                  "recovery": {
                    "via": "email"
                  }
                }
              }
            },
            "required": ["email"]
          }
        },
        "additionalProperties": false
      }
    "identity.schema.researcher.json": |
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "researcher",
        "title": "researcher",
        "type": "object",
        "properties": {
          "traits": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "title": "E-Mail",
                "minLength": 5,
                "ory.sh/kratos": {
                  "credentials": {
                    "password": {
                      "identifier": true
                    },
                    "totp": {
                      "account_name": true
                    }
                  },
                  "verification": {
                    "via": "email"
                  },
                  "recovery": {
                    "via": "email"
                  }
                }
              }
            },
            "required": ["email"]
          }
        },
        "additionalProperties": false
      }
    "identity.schema.subject.json": |
      {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "subject",
        "title": "subject",
        "type": "object",
        "properties": {
          "traits": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "title": "E-Mail",
                "minLength": 5,
                "ory.sh/kratos": {
                  "credentials": {
                    "password": {
                      "identifier": true
                    },
                    "totp": {
                      "account_name": true
                    }
                  },
                  "verification": {
                    "via": "email"
                  },
                  "recovery": {
                    "via": "email"
                  }
                }
              }
            },
            "required": ["email"]
          }
        },
        "additionalProperties": false
      }
  config:

    session:
      # Defines how long a session is active. Once that lifespan has been reached, the user needs to sign in again.
      lifespan: 24h

      cookie:
        ##-- If false, cookie is removed when the browser is closed --##
        persistent: false

    courier:
      smtp:
        from_address: radar@thehyve.nl

    serve:
      public:
        base_url: https://localhost/kratos/
        cors:
          enabled: true
          allowed_origins:
            - https://localhost/kratos-ui/
          allowed_methods:
            - POST
            - GET
            - PUT
            - PATCH
            - DELETE
          allowed_headers:
            - Authorization
            - Cookie
            - Content-Type
            - Accept
          exposed_headers:
            - Content-Type
            - Set-Cookie
            - Accept
          allow_credentials: true
      admin:
        base_url: https://localhost/admin/kratos/

    selfservice:
      default_browser_return_url: https://localhost/managementportal
      allowed_return_urls:
        - "https://localhost/"
        - "http://localhost/"

      methods:
        password:
          config:
            haveibeenpwned_enabled: true
            max_breaches: 0
            ignore_network_errors: false
            min_password_length: 12
            identifier_similarity_check_enabled: true
          enabled: true
        totp:
          config:
            issuer: Radar
          enabled: true
        link:
          enabled: true

      flows:
        error:
          ui_url: https://localhost/kratos-ui/error

        settings:
          ui_url: https://localhost/kratos-ui/settings
          required_aal: highest_available

        recovery:
          enabled: true
          ui_url: https://localhost/kratos-ui/recovery
          use: link

        verification:
          # our current flow necessitates that users reset their password after they activate an account in managementportal,
          # this works as verification
          ui_url: https://localhost/kratos-ui/verification
          enabled: false
          use: link
          after:
            default_browser_return_url: https://localhost/kratos-ui
            hooks:
              -   hook: web_hook
                  config:
                    method: POST
                    url: http://management-portal:8080/managementportal/api/kratos/subjects/activate
                    body: /etc/config/kratos/webhook_body.jsonnet
                    response:
                      ignore: true

        logout:
          after:
            default_browser_return_url: https://localhost/kratos-ui/login

        login:
          ui_url: https://localhost/kratos-ui/login

        registration:
          ui_url: https://localhost/kratos-ui/registration
          after:
            password:
              hooks:
                -   hook: web_hook
                    config:
                      method: POST
                      url: http://management-portal:8080/managementportal/api/kratos/subjects
                      body: /etc/config/kratos/webhook_body.jsonnet
                      response:
                        ignore: true
                -   hook: session
            oidc:
              hooks:
                -   hook: session

    identity:
      default_schema_id: subject
      schemas:
        - id: subject
          url: file:///etc/config/identity.schema.subject.json
        - id: researcher
          url: file:///etc/config/identity.schema.researcher.json
        - id: admin
          url: file:///etc/config/identity.schema.admin.json

    log:
      level: debug
      format: text
      leak_sensitive_values: true

    oauth2_provider:
      url: http://hydra-admin