# Remove below Go comment to enable management_portal reading
# management_portal:
  # read unencrypted keystore
  # {{/* keystore: {{ readFile "../etc/management-portal/keystore.p12" | b64enc | quote }} */}}
  # read encrypted keystore
  # {{/* keystore: {{ exec "sops" (list "-d" "../secrets/management-portal/keystore.sops.p12") | b64enc | quote }}  */}}
  #
  # In case a certificate is needed to connect to PostgreSQL
  # postgres:
  #   ssl:
  #    # With helmfile, this can be set in a production.yaml.gotmpl
  #    # file by setting
  #    {{/* keystore: {{ readFile "certificate.pem" | b64enc | quote }}  */}}

radar_grafana:
  dashboards:
    allprojects:
      home:
        json: {{ readFile "radar-grafana/dashboards/allprojects/home.json" | quote }}

# If appserver is used, please remove the Go template comments and yaml comments.
# Again, like with management_portal, if you want to store the credentials in a
# less secure location, please encrypt the JSON file it and read it with sops,
# for example.
#{{/*
#radar_appserver:
#  google_application_credentials: {{ readFile "../etc/radar-appserver/firebase-adminsdk.json" | quote }}
#*/}}

# Remove below Go comment to read the queries.sql and set the queries
# in the ksql_server
#ksql_server:
#  ksql:
#    queries: |
#      {{/*- readFile "cp-ksql-server/queries.sql" | nindent 8 */}}

# If ory kratos is used, please remove the Go template comments and yaml comments.
# These templates generate the connection strings based on multiple secrets.
#{{/*
#kratos:
#  kratos:
#    {{- $secrets := exec "sops" (list "-d" "production.yaml") | fromYaml }}
#    config:
#      {{- $postgres_user := $secrets.management_portal.postgres.user | default "postgres" }}
#      {{- $postgres_password := $secrets.management_portal.postgres.password }}
#      {{- $postgres_host := $secrets.management_portal.postgres.host | default "postgresql" }}
#      {{- $postgres_port := $secrets.management_portal.postgres.port | default "5432" }}
#      {{- $postgres_database := "kratos" }}
#      dsn: {{ printf "postgres://%s:%s@%s:%d/%s" $postgres_user $postgres_password $postgres_host $postgres_port $postgres_database | quote }}
#      courier:
#        smtp:
#          {{- $smtp_user := $secrets.management_portal.smtp.username }}
#          {{- $smtp_password := $secrets.management_portal.smtp.password }}
#          {{- $smtp_host := $secrets.management_portal.smtp.host }}
#          connection_uri: {{ printf "%s:%s@%s" $smtp_user $smtp_password $smtp_host | quote }}
#*/}}