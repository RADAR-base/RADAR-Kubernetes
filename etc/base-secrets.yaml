# --------------------------------------------------------- 00-init.yaml ---------------------------------------------------------
mongodb:
  auth:
    replicaSetKey: secret
    rootPassword: secret
    passwords:
      - secret

graylog:
    graylog:
        rootPassword: secret

kube_prometheus_stack:
    kube-prometheus-stack:
        alertmanager:
            config:
                receivers:
                -   name: default
                    slack_configs:
                    -   api_url: https://hooks.slack.com/services/XXX/XXX/XXX
                        channel: '#radar-base-alerts'
                        pretext: '{{ .CommonAnnotations.summary }}'
                        username: Radar Base
                        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{
                            end }}'
                        title: '{{ template "slack.default.title" . }}'
                        title_link: '{{ template "slack.default.titlelink" . }}'
                        fallback: '{{ template "slack.default.fallback" . }}'
                        text: "{{ range .Alerts }}\n   *Alert details:* \n  {{ range
                            .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`\n
                            \ {{ end }}\n{{ end }}"
        grafana:
            adminPassword: secret
    # Password for thehyve user at prometheus.<server_name> and alertmanager.<server_name>
    # Generate it manually with: echo "password" | htpasswd -i -n thehyve
    # Or automatically via `bin/generate-secrets` script
    nginx_auth: thehyve:$apr1$XAptsvH5$6ZA4Lf0N9DIV8C52mRkXw/

kafka_manager:
  basicAuth:
    password: secret

# --------------------------------------------------------- 10-base.yaml ---------------------------------------------------------
confluent_cloud:
  cc:
    bootstrapServerurl: confluentBootstrapServers
    schemaRegistryUrl: confluentSchemaRegistryUrl
    apiKey: ccApikey
    apiSecret: ccApiSecret
    schemaRegistryApiKey: srApiKey
    schemaRegistryApiSecret: srApiSecret

# --------------------------------------------------------- 10-managementportal.yaml ---------------------------------------------------------
postgresql:
  global:
    postgresql:
      auth:
        postgresPassword: secret
  auth:
    replicationPassword: secret

management_portal:
  postgres:
    password: secret
  managementportal:
    common_admin_password: secret
    frontend_client_secret: secret
  oauth_clients:
    pRMT:
      enable: true
      client_secret: "saturday$SHARE$scale"
    aRMT:
      enable: true
      client_secret: secret
    radar_upload_backend:
      client_secret: secret
    radar_upload_connect:
      client_secret: secret
    radar_rest_sources_auth_backend:
      client_secret: secret
    radar_redcap_integrator:
      client_secret: secret
    radar_fitbit_connector:
      client_secret: secret
    radar_appconfig:
      client_secret: secret
    radar_push_endpoint:
      client_secret: secret
  smtp:
    password: secret

app_config:
  jdbc:
    password: secret

# --------------------------------------------------------- 20-appserver.yaml ---------------------------------------------------------
# The charts in 20-appserver.yaml only need to be installed if you have a custom aRMT app.
radar_appserver_postgres_password: secret

# --------------------------------------------------------- 20-fitbit.yaml ---------------------------------------------------------
# The charts in 20-fitbit.yaml only need to be installed if you will use a Fitbit or Garmin API integration.
fitbit_api_client: "secret"
fitbit_api_secret: "secret"

radar_rest_sources_backend:
  postgres:
    password: secret

# --------------------------------------------------------- 20-grafana.yaml ---------------------------------------------------------
timescaledb_password: secret
grafana_password: secret
grafana_metrics_password: secret

# --------------------------------------------------------- 20-redcap.yaml ---------------------------------------------------------
radar_integration:
  projects: []
  # Example:
  #projects:
  #  - redcap_info:
  #      url: "http://example.com/"
  #      project_id: "1"
  #      enrolment_event: enrolment
  #      integration_form: radar_integration
  #      token: xxx
  #    mp_info:
  #      project_name: RADAR-BASE

# --------------------------------------------------------- 20-s3-connector.yaml ---------------------------------------------------------
# The access keys and secret keys of the following services should match.
# If S3 is used as a storage medium instead of minio, then fill in those.
s3_access_key: secret
s3_secret_key: secret

# --------------------------------------------------------- 20-upload.yaml ---------------------------------------------------------
radar_upload_postgres_password: secret

# --------------------------------------------------------- 20-push-endpoint.yaml ---------------------------------------------------------
radar_push_endpoint:
  garmin:
    consumerKey: "secret"
    consumerSecret: "secret"

# --------------------------------------------------------- 99-velero.yaml ---------------------------------------------------------
velero:
  backup:
    accessKey: secret
    secretKey: secret
  velero:
    credentials:
      secretContents:
        cloud: |
          [default]
          aws_access_key_id=secret
          aws_secret_access_key=secret
