mongodb:
  auth:
    replicaSetKey: secret
    rootPassword: secret
    passwords:
      - secret
graylog:
    graylog:
        rootPassword: secret
kube_prometheus_stack:
    kube-prometheus-stack:
        alertmanager:
            config:
                receivers:
                -   name: default
                    slack_configs:
                    -   api_url: https://hooks.slack.com/services/XXX/XXX/XXX
                        channel: '#radar-base-alerts'
                        pretext: '{{ .CommonAnnotations.summary }}'
                        username: Radar Base
                        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{
                            end }}'
                        title: '{{ template "slack.default.title" . }}'
                        title_link: '{{ template "slack.default.titlelink" . }}'
                        fallback: '{{ template "slack.default.fallback" . }}'
                        text: "{{ range .Alerts }}\n   *Alert details:* \n  {{ range
                            .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`\n
                            \ {{ end }}\n{{ end }}"
        grafana:
            adminPassword: secret
            # Password for admin user at prometheus.<hostname>
            # Generate with, for example
            # echo "password" | htpasswd -i -n username
            # Identify.Afoot.Onward8.Subject
    nginx_auth: thehyve:$apr1$XAptsvH5$6ZA4Lf0N9DIV8C52mRkXw/

kafka_manager:
  basicAuth:
    password: secret
confluent_cloud:
  cc:
    bootstrapServerurl: confluentBootstrapServers
    schemaRegistryUrl: confluentSchemaRegistryUrl
    apiKey: ccApikey
    apiSecret: ccApiSecret
    schemaRegistryApiKey: srApiKey
    schemaRegistryApiSecret: srApiSecret
postgresql:
  global:
    postgresql:
      auth:
        postgresPassword: secret
  auth:
    replicationPassword: secret
management_portal:
  managementportal:
    common_admin_password: secret
    frontend_client_secret: secret
  oauth_clients:
    pRMT:
      enable: true
      client_secret: "saturday$SHARE$scale"
    aRMT:
      enable: true
      client_secret: secret
    radar_upload_backend:
      client_secret: secret
    radar_upload_connect:
      client_secret: secret
    radar_rest_sources_auth_backend:
      client_secret: secret
    radar_redcap_integrator:
      client_secret: secret
    radar_fitbit_connector:
      client_secret: secret
    radar_appconfig:
      client_secret: secret
    radar_push_endpoint:
      client_secret: secret
  smtp:
    password: secret
app_config:
  jdbc:
    password: secret
radar_appserver_postgres_password: secret
fitbit_api_client: "client"
fitbit_api_secret: "secret"
radar_rest_sources_backend:
  postgres:
    password: secret
timescaledb_password: secret
grafana_password: secret
grafana_metrics_password: secret
s3_access_key: secret
s3_secret_key: secret
radar_upload_postgres_password: secret
radar_push_endpoint:
  garmin:
    consumerKey: ""
    consumerSecret: ""
velero:
  backup:
    accessKey: secret
    secretKey: secret
  velero:
    credentials:
      secretContents:
        cloud: |
          [default]
          aws_access_key_id=secret
          aws_secret_access_key=secret
