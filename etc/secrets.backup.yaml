# NOTE:
# - properties equal to 'secret' will be replaced by the bin/generate-secrets script.
# - properties equal to 'change_me' are externally provided secrets that should be replaced manually.

# --------------------------------------------------------- 00-init.yaml ---------------------------------------------------------
mongodb:
  auth:
    replicaSetKey: M44DvOjR4dj91UMLoAA4oWUlJMit9HafbMVkU
    rootPassword: hNBUlknuq498U0WA0Kbx9aqh8AskxCsItu5yGc
    passwords:
      - HNbBH8OZvTZJVXi0pPe8wO6x9EMzyZTglJQU
graylog:
  graylog:
    rootPassword: RFlNazrLccXlUJ1hFXEoGYrMBfvBCAO8LYGd9
kube_prometheus_stack:
  kube-prometheus-stack:
    alertmanager:
      config:
        receivers:
          - name: default
            slack_configs:
              - api_url: https://hooks.slack.com/services/XXX/XXX/XXX
                channel: '#radar-base-alerts'
                pretext: '{{ .CommonAnnotations.summary }}'
                username: Radar Base
                color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
                title: '{{ template "slack.default.title" . }}'
                title_link: '{{ template "slack.default.titlelink" . }}'
                fallback: '{{ template "slack.default.fallback" . }}'
                text: "{{ range .Alerts }}\n   *Alert details:* \n  {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`\n  {{ end }}\n{{ end }}"
    grafana:
      adminPassword: a0aK1IhgVjHEySkIT07js5JH0TW6ibfzj9PLf1
  # Password for thehyve user at prometheus.<server_name> and alertmanager.<server_name>
  # Generate it manually with: echo "password" | htpasswd -i -n thehyve
  # Or automatically via `bin/generate-secrets` script
  nginx_auth: thehyve:$apr1$Sbe/ReD9$dC2UBdX.9AqjSOZJ6EjIe1 # username: thehyve, password: iIQjOfuMB8WRYrBmao0B0IInUPxXn6YU5GNkwSV
# --------------------------------------------------------- 10-base.yaml ---------------------------------------------------------
confluent_cloud:
  cc:
    bootstrapServerurl: change_me
    schemaRegistryUrl: change_me
    apiKey: change_me
    apiSecret: change_me
    schemaRegistryApiKey: change_me
    schemaRegistryApiSecret: change_me
# --------------------------------------------------------- 10-managementportal.yaml ---------------------------------------------------------
postgresql:
  global:
    postgresql:
      auth:
        postgresPassword: SeHCq5EHSyhBq4wuPHjx7CqCXae8auEQTl0KDR
  auth:
    replicationPassword: SeHCq5EHSyhBq4wuPHjx7CqCXae8auEQTl0KDR
management_portal:
  postgres:
    password: SeHCq5EHSyhBq4wuPHjx7CqCXae8auEQTl0KDR
  managementportal:
    common_admin_password: KKpAH3UiPwylkC5CciN2tucivGiCOD77fpGOhbf4
    frontend_client_secret: yIuKpS1pg6vWUtEt1DS1Z4Swl61eiKCJqs1BtxK
  oauth_clients:
    pRMT:
      enable: true
      client_secret: "saturday$SHARE$scale" # default, preferably keep it this way
    aRMT:
      enable: true
      client_secret: ""
    radar_upload_backend:
      client_secret: cGMwommHKafDHRh6ZclxsTp8n22v77P1OOGYMU
    radar_upload_connect:
      client_secret: DrTvt8uQD0ogqIxGgyWtxNWcwjnY3h0G4uci08
    radar_rest_sources_auth_backend:
      client_secret: fZMpPh83GvMVdXUZbmIPKKENFxtX9Gn2S5g2w
    radar_redcap_integrator:
      client_secret: PSAdGNFR968UWqLxH30Z1P3lRQfttLNv8w07t5o
    radar_fitbit_connector:
      client_secret: Z2SMaP3aTxVi51qPgpwZhC4cxhaJdCBIFJR6PFN
    radar_appconfig:
      client_secret: xQvNLgU5QQhTWN8xL2e5f0H8Iul2PVtO0lNXVX
    radar_push_endpoint:
      client_secret: T6uGC2btZQdAIngt6PSZCV5r1PpqIxfVFUQHm
    radar_data_dashboard_backend:
      client_secret: Xq94V6JBTaiEEP2xCEM32xNgAgFvfxl2AhqGz1k
  smtp:
    username: change_me
    password: change_me
app_config:
  jdbc:
    password: SeHCq5EHSyhBq4wuPHjx7CqCXae8auEQTl0KDR
# --------------------------------------------------------- 20-appserver.yaml ---------------------------------------------------------
# The charts in 20-appserver.yaml only need to be installed if you have a custom aRMT app.
radar_appserver_postgresql:
  global:
    postgresql:
      auth:
        postgresPassword: TfrYgTNBUFZJwGkmap5T3AiBQXNLdQPnpHUd4Xm
  auth:
    replicationPassword: TfrYgTNBUFZJwGkmap5T3AiBQXNLdQPnpHUd4Xm
radar_appserver:
  postgres:
    password: TfrYgTNBUFZJwGkmap5T3AiBQXNLdQPnpHUd4Xm
  smtp:
    username: change_me
    password: change_me
# --------------------------------------------------------- 20-fitbit.yaml ---------------------------------------------------------
# The charts in 20-fitbit.yaml only need to be installed if you will use a Fitbit or Garmin API integration.
# Get a Fitbit API client by registering a server application
# at https://dev.fitbit.com/manage/
fitbit_api_client: change_me
fitbit_api_secret: change_me
oura_api_client: change_me
oura_api_secret: change_me
radar_rest_sources_backend:
  postgres:
    password: SeHCq5EHSyhBq4wuPHjx7CqCXae8auEQTl0KDR
# --------------------------------------------------------- 20-dashboard.yaml ---------------------------------------------------------
grafana_password: MuTQ5karoSH40UFGTlWwU67jz7vVzZKkXJZHyHDM
data_dashboard_db_password: iN6I9OfkybpcZwbNa2um2XonYPxQfZwqjpFUi9ql
grafana_metrics_db_password: uJD5Rc4cjeJE93uw65bbTIXSn3EY7Qae2uyCPil
realtime_dashboard_db_password: uPmgh4pI1TLsabgGP4M01njL0hZHN0ouIgPqReiE
# --------------------------------------------------------- 20-redcap.yaml ---------------------------------------------------------
radar_integration:
  projects: []
  # Example:
  #projects:
  #  - redcap_info:
  #      url: "http://example.com/"
  #      project_id: "1"
  #      enrolment_event: enrolment
  #      integration_form: radar_integration
  #      token: xxx
  #    mp_info:
  #      project_name: RADAR-BASE
# --------------------------------------------------------- 20-s3-connector.yaml ---------------------------------------------------------
# The access keys and secret keys of object storage services should match.
# If AWS S3 is used as a storage medium instead of minio, then enter the AWS-provided secrets here.
# For minio the secrets must consist of at least 8 characters.
s3_access_key: 7zIxMIxbZwZtJgNQUEp1hUTp4YxaeT6UnFYFFru
s3_secret_key: OhSZTj9PcRRLY9EGOq3OmqUC2ivVA24BFmbHjMm
# --------------------------------------------------------- 20-upload.yaml ---------------------------------------------------------
radar_upload_postgres_password: qlXixLpkDyIIztqXxfZgpQmujbLE11axg2yRyi6
# --------------------------------------------------------- 20-push-endpoint.yaml ---------------------------------------------------------
# Get a Garmin Connect client by registering at
# https://developer.garmin.com/gc-developer-program/overview/
radar_push_endpoint:
  garmin:
    consumerKey: change_me
    consumerSecret: change_me
# --------------------------------------------------------- 99-velero.yaml ---------------------------------------------------------
velero:
  backup:
    accessKey: change_me
    secretKey: change_me
  velero:
    credentials:
      secretContents:
        cloud: |
          [default]
          aws_access_key_id=change_me
          aws_secret_access_key=change_me
